// Code generated by Slice Machine. DO NOT EDIT.

import type * as prismicT from "@prismicio/types";
import type * as prismic from "@prismicio/client";

type Simplify<T> = {
    [KeyType in keyof T]: T[KeyType];
};
/** Content for Work documents */
interface WorkDocumentData {
    /**
     * title field in *Work*
     *
     * - **Field Type**: Rich Text
     * - **Placeholder**: *None*
     * - **API ID Path**: work.title
     * - **Tab**: Main
     * - **Documentation**: https://prismic.io/docs/core-concepts/rich-text-title
     *
     */
    title: prismicT.RichTextField;
    /**
     * subtitle field in *Work*
     *
     * - **Field Type**: Rich Text
     * - **Placeholder**: *None*
     * - **API ID Path**: work.subtitle
     * - **Tab**: Main
     * - **Documentation**: https://prismic.io/docs/core-concepts/rich-text-title
     *
     */
    subtitle: prismicT.RichTextField;
    /**
     * big image field in *Work*
     *
     * - **Field Type**: Image
     * - **Placeholder**: *None*
     * - **API ID Path**: work.big_image
     * - **Tab**: Main
     * - **Documentation**: https://prismic.io/docs/core-concepts/image
     *
     */
    big_image: prismicT.ImageField<never>;
    /**
     * Slice Zone field in *Work*
     *
     * - **Field Type**: Slice Zone
     * - **Placeholder**: *None*
     * - **API ID Path**: work.slices[]
     * - **Tab**: Main
     * - **Documentation**: https://prismic.io/docs/core-concepts/slices
     *
     */
    slices: prismicT.SliceZone<WorkDocumentDataSlicesSlice>;
}
/**
 * Slice for *Work → Slice Zone*
 *
 */
type WorkDocumentDataSlicesSlice = TechSliceSlice | TextSliceSlice | TriImageSliceSlice;
/**
 * Work document from Prismic
 *
 * - **API ID**: `work`
 * - **Repeatable**: `true`
 * - **Documentation**: https://prismic.io/docs/core-concepts/custom-types
 *
 * @typeParam Lang - Language API ID of the document.
 */
export type WorkDocument<Lang extends string = string> = prismicT.PrismicDocumentWithUID<Simplify<WorkDocumentData>, "work", Lang>;
export type AllDocumentTypes = WorkDocument;
/**
 * Primary content in TechSlice → Primary
 *
 */
interface TechSliceSliceDefaultPrimary {
    /**
     * Heading field in *TechSlice → Primary*
     *
     * - **Field Type**: Rich Text
     * - **Placeholder**: This is where it all begins...
     * - **API ID Path**: tech_slice.primary.heading
     * - **Documentation**: https://prismic.io/docs/core-concepts/rich-text-title
     *
     */
    heading: prismicT.RichTextField;
    /**
     * Tech Used field in *TechSlice → Primary*
     *
     * - **Field Type**: Rich Text
     * - **Placeholder**: *None*
     * - **API ID Path**: tech_slice.primary.tech_used
     * - **Documentation**: https://prismic.io/docs/core-concepts/rich-text-title
     *
     */
    tech_used: prismicT.RichTextField;
    /**
     * Description field in *TechSlice → Primary*
     *
     * - **Field Type**: Rich Text
     * - **Placeholder**: A nice description of your product
     * - **API ID Path**: tech_slice.primary.description
     * - **Documentation**: https://prismic.io/docs/core-concepts/rich-text-title
     *
     */
    description: prismicT.RichTextField;
    /**
     * Section Name field in *TechSlice → Primary*
     *
     * - **Field Type**: Text
     * - **Placeholder**: *None*
     * - **API ID Path**: tech_slice.primary.section_name
     * - **Documentation**: https://prismic.io/docs/core-concepts/key-text
     *
     */
    section_name: prismicT.KeyTextField;
}
/**
 * Default variation for TechSlice Slice
 *
 * - **API ID**: `default`
 * - **Description**: `TechSlice`
 * - **Documentation**: https://prismic.io/docs/core-concepts/reusing-slices
 *
 */
export type TechSliceSliceDefault = prismicT.SharedSliceVariation<"default", Simplify<TechSliceSliceDefaultPrimary>, never>;
/**
 * Slice variation for *TechSlice*
 *
 */
type TechSliceSliceVariation = TechSliceSliceDefault;
/**
 * TechSlice Shared Slice
 *
 * - **API ID**: `tech_slice`
 * - **Description**: `TechSlice`
 * - **Documentation**: https://prismic.io/docs/core-concepts/reusing-slices
 *
 */
export type TechSliceSlice = prismicT.SharedSlice<"tech_slice", TechSliceSliceVariation>;
/**
 * Primary content in TextSlice → Primary
 *
 */
interface TextSliceSliceDefaultPrimary {
    /**
     * Heading field in *TextSlice → Primary*
     *
     * - **Field Type**: Rich Text
     * - **Placeholder**: This is where it all begins...
     * - **API ID Path**: text_slice.primary.heading
     * - **Documentation**: https://prismic.io/docs/core-concepts/rich-text-title
     *
     */
    heading: prismicT.RichTextField;
    /**
     * content field in *TextSlice → Primary*
     *
     * - **Field Type**: Rich Text
     * - **Placeholder**: A nice description of your product
     * - **API ID Path**: text_slice.primary.description
     * - **Documentation**: https://prismic.io/docs/core-concepts/rich-text-title
     *
     */
    description: prismicT.RichTextField;
    /**
     * Section Name field in *TextSlice → Primary*
     *
     * - **Field Type**: Text
     * - **Placeholder**: *None*
     * - **API ID Path**: text_slice.primary.section_name
     * - **Documentation**: https://prismic.io/docs/core-concepts/key-text
     *
     */
    section_name: prismicT.KeyTextField;
}
/**
 * Default variation for TextSlice Slice
 *
 * - **API ID**: `default`
 * - **Description**: `TextSlice`
 * - **Documentation**: https://prismic.io/docs/core-concepts/reusing-slices
 *
 */
export type TextSliceSliceDefault = prismicT.SharedSliceVariation<"default", Simplify<TextSliceSliceDefaultPrimary>, never>;
/**
 * Slice variation for *TextSlice*
 *
 */
type TextSliceSliceVariation = TextSliceSliceDefault;
/**
 * TextSlice Shared Slice
 *
 * - **API ID**: `text_slice`
 * - **Description**: `TextSlice`
 * - **Documentation**: https://prismic.io/docs/core-concepts/reusing-slices
 *
 */
export type TextSliceSlice = prismicT.SharedSlice<"text_slice", TextSliceSliceVariation>;
/**
 * Primary content in TriImageSlice → Primary
 *
 */
interface TriImageSliceSliceDefaultPrimary {
    /**
     * Small Image 1 field in *TriImageSlice → Primary*
     *
     * - **Field Type**: Image
     * - **Placeholder**: *None*
     * - **API ID Path**: tri_image_slice.primary.small_image_1
     * - **Documentation**: https://prismic.io/docs/core-concepts/image
     *
     */
    small_image_1: prismicT.ImageField<never>;
    /**
     * Small Image 2 field in *TriImageSlice → Primary*
     *
     * - **Field Type**: Image
     * - **Placeholder**: *None*
     * - **API ID Path**: tri_image_slice.primary.small_image_2
     * - **Documentation**: https://prismic.io/docs/core-concepts/image
     *
     */
    small_image_2: prismicT.ImageField<never>;
    /**
     * Small Image 3 field in *TriImageSlice → Primary*
     *
     * - **Field Type**: Image
     * - **Placeholder**: *None*
     * - **API ID Path**: tri_image_slice.primary.small_image_3
     * - **Documentation**: https://prismic.io/docs/core-concepts/image
     *
     */
    small_image_3: prismicT.ImageField<never>;
}
/**
 * Default variation for TriImageSlice Slice
 *
 * - **API ID**: `default`
 * - **Description**: `TriImageSlice`
 * - **Documentation**: https://prismic.io/docs/core-concepts/reusing-slices
 *
 */
export type TriImageSliceSliceDefault = prismicT.SharedSliceVariation<"default", Simplify<TriImageSliceSliceDefaultPrimary>, never>;
/**
 * Slice variation for *TriImageSlice*
 *
 */
type TriImageSliceSliceVariation = TriImageSliceSliceDefault;
/**
 * TriImageSlice Shared Slice
 *
 * - **API ID**: `tri_image_slice`
 * - **Description**: `TriImageSlice`
 * - **Documentation**: https://prismic.io/docs/core-concepts/reusing-slices
 *
 */
export type TriImageSliceSlice = prismicT.SharedSlice<"tri_image_slice", TriImageSliceSliceVariation>;
declare module "@prismicio/client" {
    interface CreateClient {
        (repositoryNameOrEndpoint: string, options?: prismic.ClientConfig): prismic.Client<AllDocumentTypes>;
    }
    namespace Content {
        export type { WorkDocumentData, WorkDocumentDataSlicesSlice, WorkDocument, AllDocumentTypes, TechSliceSliceDefaultPrimary, TechSliceSliceDefault, TechSliceSliceVariation, TechSliceSlice, TextSliceSliceDefaultPrimary, TextSliceSliceDefault, TextSliceSliceVariation, TextSliceSlice, TriImageSliceSliceDefaultPrimary, TriImageSliceSliceDefault, TriImageSliceSliceVariation, TriImageSliceSlice };
    }
}
